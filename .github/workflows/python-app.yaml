---
# This workflow will install Python dependencies, check python code (format,
# linters...) and run tests with a single version of Python.
# For more information see:
# https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python framework

on:
  push:
  pull_request:
    types: [opened, reopened]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f backend/requirements-dev.txt ]; then
            pip install -r backend/requirements-dev.txt;
          fi
      - name: Black format
        run: |
          black . --config=backend/pyproject.toml --check --diff
      - name: Mypy typing
        run: |
          mypy backend --config-file=backend/pyproject.toml --check

      - name: Bandit
        run: |
          bandit backend -c=backend/pyproject.toml

      - name: Ruff linter
        run: |
          ruff check .

      - name: Detect secrets
        run: |
          detect-secrets scan .

      - name: Toml sort
        run: |
          toml-sort -i backend/pyproject.toml --check

      - name: Run test with pytest
        run: |
          pytest --cov=.

      - name: Coverage Badge
        uses: tj-actions/coverage-badge-py@v2
        with:
          output: assets/badges/coverage.svg

      - name: Verify Changed coverage
        uses: tj-actions/verify-changed-files@v16
        id: verify-changed-files
        with:
          files: assets/badges/coverage.svg

      - name: Commit coverage badge file
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add assets/badges/coverage.svg
          git commit -m "Updated coverage.svg"
          echo ${{ github.repository }}
          echo ${{ github.server_url }}
          echo ${{ github }}

      - name: Push changes
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: YAYAYYA
          branch: ${{ github.ref }}
